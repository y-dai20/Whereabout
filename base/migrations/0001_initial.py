# Generated by Django 3.2.5 on 2023-03-10 14:55

import base.models.functions
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, default='匿名', max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('fail_login_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('access_count', models.IntegerField(default=0)),
                ('one_time_id', models.CharField(max_length=128)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('web', models.CharField(blank=True, default='', max_length=255)),
                ('phone', models.CharField(blank=True, default='', max_length=15)),
                ('zip_code', models.CharField(blank=True, default='', max_length=8)),
                ('state', models.CharField(blank=True, default='', max_length=15)),
                ('city', models.CharField(blank=True, default='', max_length=15)),
                ('address_1', models.CharField(blank=True, default='', max_length=15)),
                ('address_2', models.CharField(blank=True, default='', max_length=15)),
                ('mon_from', models.CharField(blank=True, default='', max_length=5)),
                ('mon_to', models.CharField(blank=True, default='', max_length=5)),
                ('tue_from', models.CharField(blank=True, default='', max_length=5)),
                ('tue_to', models.CharField(blank=True, default='', max_length=5)),
                ('wed_from', models.CharField(blank=True, default='', max_length=5)),
                ('wed_to', models.CharField(blank=True, default='', max_length=5)),
                ('thu_from', models.CharField(blank=True, default='', max_length=5)),
                ('thu_to', models.CharField(blank=True, default='', max_length=5)),
                ('fri_from', models.CharField(blank=True, default='', max_length=5)),
                ('fri_to', models.CharField(blank=True, default='', max_length=5)),
                ('sat_from', models.CharField(blank=True, default='', max_length=5)),
                ('sat_to', models.CharField(blank=True, default='', max_length=5)),
                ('sun_from', models.CharField(blank=True, default='', max_length=5)),
                ('sun_to', models.CharField(blank=True, default='', max_length=5)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=50)),
                ('text', models.CharField(default='', max_length=255)),
                ('source', models.CharField(blank=True, default='', max_length=255)),
                ('video', models.FileField(blank=True, null=True, upload_to=base.models.functions.video_directory_path)),
                ('img1', models.ImageField(blank=True, null=True, upload_to=base.models.functions.post_directory_path)),
                ('img2', models.ImageField(blank=True, null=True, upload_to=base.models.functions.post_directory_path)),
                ('img3', models.ImageField(blank=True, null=True, upload_to=base.models.functions.post_directory_path)),
                ('img4', models.ImageField(blank=True, null=True, upload_to=base.models.functions.post_directory_path)),
                ('agree_count', models.IntegerField(default=0)),
                ('disagree_count', models.IntegerField(default=0)),
                ('true_count', models.IntegerField(default=0)),
                ('false_count', models.IntegerField(default=0)),
                ('favorite_count', models.IntegerField(default=0)),
                ('reply_count', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReplyPost',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('text', models.CharField(default='', max_length=255)),
                ('source', models.CharField(blank=True, default='', max_length=255)),
                ('agree_count', models.IntegerField(default=0)),
                ('disagree_count', models.IntegerField(default=0)),
                ('true_count', models.IntegerField(default=0)),
                ('false_count', models.IntegerField(default=0)),
                ('favorite_count', models.IntegerField(default=0)),
                ('reply_count', models.IntegerField(default=0)),
                ('img', models.ImageField(blank=True, null=True, upload_to=base.models.functions.img_directory_path)),
                ('position', models.CharField(choices=[('Agree', '賛成'), ('Neutral', '中立'), ('Disagree', '反対')], default='Neutral', max_length=16)),
                ('type', models.CharField(max_length=8)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=255)),
                ('subtitle', models.CharField(default='', max_length=255)),
                ('video', models.FileField(blank=True, null=True, upload_to=base.models.functions.video_directory_path)),
                ('is_public', models.BooleanField(default=True)),
                ('need_approval', models.BooleanField(default=False)),
                ('img1', models.ImageField(blank=True, null=True, upload_to=base.models.functions.room_directory_path)),
                ('img2', models.ImageField(blank=True, null=True, upload_to=base.models.functions.room_directory_path)),
                ('img3', models.ImageField(blank=True, null=True, upload_to=base.models.functions.room_directory_path)),
                ('img4', models.ImageField(blank=True, null=True, upload_to=base.models.functions.room_directory_path)),
                ('img5', models.ImageField(blank=True, null=True, upload_to=base.models.functions.room_directory_path)),
                ('good_count', models.IntegerField(default=0)),
                ('bad_count', models.IntegerField(default=0)),
                ('participant_count', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoomAuthority',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('can_reply', models.BooleanField(default=False)),
                ('can_post', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomTab',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(default='title', max_length=32)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.room')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=15, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='base.user')),
                ('img', models.ImageField(blank=True, null=True, upload_to=base.models.functions.img_directory_path)),
                ('profession', models.CharField(blank=True, default='', max_length=255)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('followed_count', models.IntegerField(default=0)),
                ('blocked_count', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomReplyType',
            fields=[
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='base.room')),
                ('type1', models.CharField(default='つぶやき', max_length=8)),
                ('type2', models.CharField(default='根拠', max_length=8)),
                ('type3', models.CharField(default='確認', max_length=8)),
                ('type4', models.CharField(default='要求', max_length=8)),
                ('type5', models.CharField(default='予想', max_length=8)),
                ('type6', models.CharField(default='回答', max_length=8)),
                ('type7', models.CharField(default='質問', max_length=8)),
                ('type8', models.CharField(default='補足', max_length=8)),
                ('type9', models.CharField(default='証拠', max_length=8)),
                ('type10', models.CharField(default='その他', max_length=8)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomTabSequence',
            fields=[
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='base.room')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserReset',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('prev_password', models.CharField(max_length=128)),
                ('one_time_id', models.CharField(max_length=128)),
                ('is_success', models.BooleanField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('followee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followee', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEvaluate',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('false_access', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blockee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockee', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagSequence',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag1', to='base.tag')),
                ('tag10', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag10', to='base.tag')),
                ('tag2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag2', to='base.tag')),
                ('tag3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag3', to='base.tag')),
                ('tag4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag4', to='base.tag')),
                ('tag5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag5', to='base.tag')),
                ('tag6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag6', to='base.tag')),
                ('tag7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag7', to='base.tag')),
                ('tag8', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag8', to='base.tag')),
                ('tag9', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag9', to='base.tag')),
            ],
        ),
        migrations.CreateModel(
            name='RoomUser',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authority', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='base.roomauthority')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomTabItem',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('text', models.CharField(blank=True, default='', max_length=1024)),
                ('img', models.ImageField(blank=True, default='', upload_to=base.models.functions.room_directory_path)),
                ('row', models.IntegerField()),
                ('column', models.IntegerField()),
                ('col', models.IntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_tab', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='base.roomtab')),
            ],
        ),
        migrations.CreateModel(
            name='RoomRequestInformation',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('sequence', models.IntegerField(default=1)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('choice', models.CharField(blank=True, max_length=255)),
                ('min_length', models.IntegerField(default=0)),
                ('max_length', models.IntegerField(default=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
            ],
        ),
        migrations.CreateModel(
            name='RoomInviteUser',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invite_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomInformation',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.roomrequestinformation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomGuest',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
            ],
        ),
        migrations.CreateModel(
            name='RoomGood',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_good', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='authority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.roomauthority'),
        ),
        migrations.AddField(
            model_name='room',
            name='personal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.personal'),
        ),
        migrations.AddField(
            model_name='room',
            name='tag_sequence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.tagsequence'),
        ),
        migrations.CreateModel(
            name='ReplyReply',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('text', models.CharField(default='', max_length=255)),
                ('source', models.CharField(blank=True, default='', max_length=255)),
                ('agree_count', models.IntegerField(default=0)),
                ('disagree_count', models.IntegerField(default=0)),
                ('true_count', models.IntegerField(default=0)),
                ('false_count', models.IntegerField(default=0)),
                ('favorite_count', models.IntegerField(default=0)),
                ('reply_count', models.IntegerField(default=0)),
                ('img', models.ImageField(blank=True, null=True, upload_to=base.models.functions.img_directory_path)),
                ('position', models.CharField(choices=[('Agree', '賛成'), ('Neutral', '中立'), ('Disagree', '反対')], default='Neutral', max_length=16)),
                ('type', models.CharField(max_length=8)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replypost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReplyFavorite',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replypost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReplyDemagogy',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_true', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replypost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReplyAgree',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_agree', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replypost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply2Favorite',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replyreply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply2Demagogy',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_true', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replyreply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply2Agree',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_agree', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.replyreply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostFavorite',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostDemagogy',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_true', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostAgree',
            fields=[
                ('id', models.CharField(default=base.models.functions.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('is_agree', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.room'),
        ),
        migrations.AddField(
            model_name='post',
            name='tag_sequence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.tagsequence'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='roomuser',
            constraint=models.UniqueConstraint(fields=('room', 'user'), name='unique_room_user'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab1', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab10',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab10', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab2', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab3', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab4',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab4', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab5',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab5', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab6',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab6', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab7',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab7', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab8',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab8', to='base.roomtab'),
        ),
        migrations.AddField(
            model_name='roomtabsequence',
            name='tab9',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tab9', to='base.roomtab'),
        ),
        migrations.AddConstraint(
            model_name='roomguest',
            constraint=models.UniqueConstraint(fields=('room', 'guest'), name='unique_room_guest'),
        ),
        migrations.AddField(
            model_name='profile',
            name='tag_sequence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.tagsequence'),
        ),
    ]
